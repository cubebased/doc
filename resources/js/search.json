[[{"l":"Welcome","p":["Cubebased is a decentralized media plattform useing IPFS and based on EOS. Moderators on the platform are chosen by the community itself. With good content tokens can be earned, which can be exchanged later for real money. The media and the metadata are distributed all over the world and cannot be easily removed by governments and organizations. Link to Application","You are currently on the documentation page, on this page we will further touch on the rules and technology."]},{"l":"Table of content","p":["The project idea itself","How to build & run the platform","The rules","The basic archtitecture of the platform","How to participate"]}],[{"l":"Idea and motivation","p":["Platforms such as YouTube, Facebook and Reddit are operated by companies that can be influenced in various ways. On the one hand, through political guidelines and regulations, and on the other hand, through company shareholdings and capital.","As a result, a few people and organizations have influence over what content is disseminated, deleted or shadow-banned. Unpopular or critical content is restricted according to the consultation of the stakeholders. In this way, small individual groups decide which content the masses will see. High-reach platforms have a strong influence on the formation of political and social opinion.","To counteract this development, the idea of a decentralized platform managed by the community itself was born. Members in the community are rewarded for good content and punished for harmful content. The community itself decides how content is classified (good/bad)."]}],[{"l":"Getting started"}],[{"l":"Unchangeable rules","p":["Violation will result in permanent exclusion.","No sexual, suggestive or nude depiction of minors","No brute force on minors.","No animal cruelty.","No zoophilia or fetish videos with animals.","No misuse of the report function.","sfw, nsfw and nsfl content must be marked accordingly for uploads. Violation of this rule will be punished, but does not result in permanent exclusion.","All words and terms are allowed on the platform.","If you want to know how the reporting process works look here."]},{"l":"Further rules","p":["All other rules can be added or removed by the community via vote. The vote is evaluated with an smart contract."]}],[{"i":"safe-for-work-sfw","l":"Safe For Work (SFW)","p":["Content in this category is child friendly and can be viewed without problems at work or in public areas. It doesn't contains any sexualized, brutal or disgusting content."]},{"i":"not-safe-for-work-nsfw","l":"Not Safe For Work (NSFW)","p":["Content in this category contains porn and slightly offensive stuff."]},{"i":"not-save-for-live-nsfl","l":"Not Save For Live (NSFL)","p":["Content in this category contains violence, disturbing and nasty stuff, anything where people get hurt. The content may be disturbing to some people and should not be consumed by minors or people with a weak mental state."]}],[{"l":"Overview","p":["The server connects to the web server running the viewer.","The server transmits a list of IP addresses of blockchain nodes","The client sends POST/GET requests to individual listed blockchain nodes.","Client receives metadata (IPFS hash, comments, tags, author, ...) as a response","The client establishes a connection to an IPFS gateway","The IPFS gateway establishes a connection to the IPFS network","The requested media is downloaded from the IPFS network","The IPFS gateway transfers the media to the client"]}],[{"l":"Authentication"}],[{"l":"Storage"}],[{"l":"Rewards"},{"l":"Miner","p":["People who keep the network running through their efforts (miners) receive a share of the generated coins as a reward."]},{"l":"Content Creator","p":["User who upload great content or write awesome comments are rewarded. The user base decides for itself how the content is classified."]},{"l":"Active User","p":["Active users are rewarded as well. As activity counts:","write comments","add tags","vote/classifing Content"]},{"l":"Dev Team","p":["To keep the developing running a part of the newly generated coins goes into a pot, which can be used by the developers."]},{"l":"Truster","p":["Users who assess reported content and make a decision are also rewarded for their activity"]}],[{"l":"Cbased Contract","p":["The account with the accountname Cbased is the main contract and consists of functions and tables. The order of the parameters is crucial for the integration with the Smart Contract. The developing of the cbased contract is still in process."]},{"l":"Actions"},{"l":"activateuser","p":["Type: activateuser","username(name)"]},{"l":"addccomment","p":["Type: addccomment","autor(name)","text(string)","uploadid(uint64)","parentcommentid(uint64)"]},{"l":"addcomment","p":["Type: addcomment","autor(name)","text(string)","uploadid(uint64)"]},{"l":"addcooldown","p":["Type: addcooldown","autor(name)","action(uint16)"]},{"l":"addfavorite","p":["Type: addfavorite","autor(name)","uploadid(uint64)"]},{"l":"addtag","p":["Type: addtag","autor(name)","uploadid(uint64)","text(string)"]},{"l":"addtruster","p":["Type: addtruster","trustername(name)"]},{"l":"addupload","p":["Type: addupload","autor(name)","ipfshash(string)","ipfshash_thumb(string)","uploadtext(string)","filetyp(string)","flag(uint8)"]},{"l":"banuser","p":["Type: banuser","username(name)"]},{"l":"betruster","p":["Type: betruster","autor(name)","applicationtimeinweek(uint8)"]},{"l":"claimrewards","p":["Type: claimrewards","autor(name)","symbol(string)","value(uint64)"]},{"l":"delfavorite","p":["Type: delfavorite","autor(name)","uploadid(uint64)"]},{"l":"delupload","p":["Type: delupload","uploadid(uint64)"]},{"l":"init","p":["Type: init","value(uint16)"]},{"l":"remcooldown","p":["Type: remcooldown","autor(name)","action(uint16)"]},{"l":"reportupload","p":["Type: reportupload","autor(name)","uploadid(uint64)","violatedrule(uint8)"]},{"l":"trustervote","p":["Type: trustervote","trustername(name)","uploadid(uint64)","vote(int8)"]},{"l":"voteupload","p":["Type: voteupload","autor(name)","vote(int8)","uploadid(uint64)"]},{"l":"Tables"},{"l":"badges","p":["Type: badges","badgeid(uint64)","badgetext(string)","creationtime(time_point)","ipfshash(string)","ipfshash_thumb(string)","filetyp(string)"]},{"l":"comments","p":["Type: comments","commentid(uint64)","parentcommentid(uint64)","autor(name)","creationtime(time_point)","uploadid(uint64)","commenttext(string)","token(int32)"]},{"l":"configs","p":["Type: configs","configid(uint64)","uintvalue(uint64)","stringvalue(string)"]},{"l":"cooldown","p":["Type: cooldown","cooldownid(uint64)","user(name)","action(uint16)","counter(uint16)","lastaction(time_point)"]},{"l":"globaltags","p":["Type: globaltags","globaltagid(uint64)","text(string)"]},{"l":"reports","p":["Type: report","uploadid(uint64)","reportername(uint64)","violatedrule(uint8)","reporttime(time_point)","numberoftrusters(uint8)","outstandingvotes(uint8)","vote_weight(int8)"]},{"l":"reportvotes","p":["Type: reportvote","trustername(uint64)","vote(int8)"]},{"l":"tags","p":["Type: tags","tagid(uint64)","text(string)","autor(name)","token(int32)"]},{"l":"trusters","p":["Type: truster","trustername(uint64)","karma(uint16)","status(uint8)","election_date(time_point)"]},{"l":"uploads","p":["Type: uploads","uploadid(uint64)","autor(name)","creationtime(time_point)","ipfshash(string)","ipfshash_filetyp(string)","ipfshash_thumb(string)","uploadtext(string)","flag(uint8)","numofcomments(uint16)","numoffavorites(uint16)","token(int32)"]},{"l":"userbadge","p":["Type: userbadge","userbadgeid(uint64)","user(name)","badgeid(uint64)","handover(time_point)"]},{"l":"userconfig","p":["Type: userconfig","configid(uint64)","active(uint8)","last_act_reset(time_point)","act_token(uint16)","last_claim_time(time_point)"]},{"l":"userfavorite","p":["Type: userfavorite","id(uint64)","uploadid(uint64)"]},{"l":"useruploads","p":["Type: useruploads","id(uint64)","uploadid(uint64)"]},{"l":"votecomments","p":["Type: votecomments","votecommentsid(uint64)","commentsid(uint64)","autor(name)","vote(int8)"]},{"l":"votetags","p":["Type: votetags","votetagsid(uint64)","tagid(uint64)","autor(name)","vote(int8)"]},{"l":"voteuploads","p":["Type: voteuploads","uploadid(uint64)","vote(int8)"]},{"l":"withthistag","p":["Type: withthistag","uploadid(uint64)"]}],[{"l":"reporting process"}],[{"l":"Connection"}],[{"l":"Nodes"}],[{"l":"Overview"}],[{"l":"Report of bugs"}],[{"l":"Your ideas"}]]